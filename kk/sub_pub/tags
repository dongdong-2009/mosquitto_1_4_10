!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AI_ADDRCONFIG	lib/net_mosq.c	47;"	d	file:
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_PERSISTENCE$/;"	m
CC	client/Makefile	/^CC				:= gcc$/;"	m
CC	lib/Makefile	/^CC					:= gcc$/;"	m
CFLAGS	client/Makefile	/^CFLAGS			:= -I..\/lib$/;"	m
CLIENT_CFLAGS	config.mk	/^	CLIENT_CFLAGS:=$(CLIENT_CFLAGS) -DWITH_SRV$/;"	m
CLIENT_CFLAGS	config.mk	/^CLIENT_CFLAGS:=${CFLAGS} -I..\/lib #-DVERSION="\\"${VERSION}\\""$/;"	m
CLIENT_LDFLAGS	config.mk	/^CLIENT_LDFLAGS:=$(LDFLAGS) -L..\/lib $/;"	m
CLIENT_PUB	client/client_shared.h	30;"	d
CLIENT_SUB	client/client_shared.h	31;"	d
COMPAT_CLOSE	lib/net_mosq.h	34;"	d
COMPAT_CLOSE	lib/net_mosq.h	38;"	d
COMPAT_ECONNRESET	lib/net_mosq.h	35;"	d
COMPAT_ECONNRESET	lib/net_mosq.h	39;"	d
COMPAT_EWOULDBLOCK	lib/net_mosq.h	36;"	d
COMPAT_EWOULDBLOCK	lib/net_mosq.h	40;"	d
CONNACK	lib/mqtt3_protocol.h	30;"	d
CONNACK_ACCEPTED	lib/mqtt3_protocol.h	44;"	d
CONNACK_REFUSED_BAD_USERNAME_PASSWORD	lib/mqtt3_protocol.h	48;"	d
CONNACK_REFUSED_IDENTIFIER_REJECTED	lib/mqtt3_protocol.h	46;"	d
CONNACK_REFUSED_NOT_AUTHORIZED	lib/mqtt3_protocol.h	49;"	d
CONNACK_REFUSED_PROTOCOL_VERSION	lib/mqtt3_protocol.h	45;"	d
CONNACK_REFUSED_SERVER_UNAVAILABLE	lib/mqtt3_protocol.h	47;"	d
CONNECT	lib/mqtt3_protocol.h	29;"	d
CROSS_COMPILE	client/Makefile	/^CROSS_COMPILE	:=$/;"	m
CROSS_COMPILE	lib/Makefile	/^CROSS_COMPILE		:=$/;"	m
DISCONNECT	lib/mqtt3_protocol.h	42;"	d
EPROTO	lib/config.h	31;"	d
HAVE_PSELECT	lib/mosquitto.c	50;"	d	file:
INVALID_SOCKET	lib/net_mosq.h	45;"	d
LDFLAGS	client/Makefile	/^LDFLAGS			:= -L..\/lib$/;"	m
LDLIBS	client/Makefile	/^LDLIBS			:= -lmosquitto -lpthread$/;"	m
LIBMOSQUITTO_MAJOR	lib/mosquitto.h	46;"	d
LIBMOSQUITTO_MINOR	lib/mosquitto.h	47;"	d
LIBMOSQUITTO_REVISION	lib/mosquitto.h	48;"	d
LIBMOSQUITTO_VERSION_NUMBER	lib/mosquitto.h	50;"	d
LIB_CFLAGS	config.mk	/^	LIB_CFLAGS:=$(LIB_CFLAGS) -DWITH_SRV$/;"	m
LIB_CFLAGS	config.mk	/^	LIB_CFLAGS:=$(LIB_CFLAGS) -DWITH_THREADING$/;"	m
LIB_CFLAGS	config.mk	/^LIB_CFLAGS:=$(LIB_CFLAGS) -fPIC$/;"	m
LIB_CFLAGS	config.mk	/^LIB_CFLAGS:=${CFLAGS} -I. -I.. -I..\/lib$/;"	m
LIB_CFLAGS	lib/Makefile	/^LIB_CFLAGS			:= -I. -DWITH_THREADING$/;"	m
LIB_CXXFLAGS	config.mk	/^LIB_CXXFLAGS:=$(LIB_CXXFLAGS) -fPIC$/;"	m
LIB_LDFLAGS	config.mk	/^LIB_LDFLAGS:=${LDFLAGS}$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lcares$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lpthread$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lrt$/;"	m
MOSQ_ERR_ACL_DENIED	lib/mosquitto.h	/^	MOSQ_ERR_ACL_DENIED = 12,$/;"	e	enum:mosq_err_t
MOSQ_ERR_AUTH	lib/mosquitto.h	/^	MOSQ_ERR_AUTH = 11,$/;"	e	enum:mosq_err_t
MOSQ_ERR_CONN_LOST	lib/mosquitto.h	/^	MOSQ_ERR_CONN_LOST = 7,$/;"	e	enum:mosq_err_t
MOSQ_ERR_CONN_PENDING	lib/mosquitto.h	/^	MOSQ_ERR_CONN_PENDING = -1,$/;"	e	enum:mosq_err_t
MOSQ_ERR_CONN_REFUSED	lib/mosquitto.h	/^	MOSQ_ERR_CONN_REFUSED = 5,$/;"	e	enum:mosq_err_t
MOSQ_ERR_EAI	lib/mosquitto.h	/^	MOSQ_ERR_EAI = 15,$/;"	e	enum:mosq_err_t
MOSQ_ERR_ERRNO	lib/mosquitto.h	/^	MOSQ_ERR_ERRNO = 14,$/;"	e	enum:mosq_err_t
MOSQ_ERR_INVAL	lib/mosquitto.h	/^	MOSQ_ERR_INVAL = 3,$/;"	e	enum:mosq_err_t
MOSQ_ERR_NOMEM	lib/mosquitto.h	/^	MOSQ_ERR_NOMEM = 1,$/;"	e	enum:mosq_err_t
MOSQ_ERR_NOT_FOUND	lib/mosquitto.h	/^	MOSQ_ERR_NOT_FOUND = 6,$/;"	e	enum:mosq_err_t
MOSQ_ERR_NOT_SUPPORTED	lib/mosquitto.h	/^	MOSQ_ERR_NOT_SUPPORTED = 10,$/;"	e	enum:mosq_err_t
MOSQ_ERR_NO_CONN	lib/mosquitto.h	/^	MOSQ_ERR_NO_CONN = 4,$/;"	e	enum:mosq_err_t
MOSQ_ERR_PAYLOAD_SIZE	lib/mosquitto.h	/^	MOSQ_ERR_PAYLOAD_SIZE = 9,$/;"	e	enum:mosq_err_t
MOSQ_ERR_PROTOCOL	lib/mosquitto.h	/^	MOSQ_ERR_PROTOCOL = 2,$/;"	e	enum:mosq_err_t
MOSQ_ERR_PROXY	lib/mosquitto.h	/^	MOSQ_ERR_PROXY = 16$/;"	e	enum:mosq_err_t
MOSQ_ERR_SUCCESS	lib/mosquitto.h	/^	MOSQ_ERR_SUCCESS = 0,$/;"	e	enum:mosq_err_t
MOSQ_ERR_TLS	lib/mosquitto.h	/^	MOSQ_ERR_TLS = 8,$/;"	e	enum:mosq_err_t
MOSQ_ERR_UNKNOWN	lib/mosquitto.h	/^	MOSQ_ERR_UNKNOWN = 13,$/;"	e	enum:mosq_err_t
MOSQ_LOG_ALL	lib/mosquitto.h	62;"	d
MOSQ_LOG_DEBUG	lib/mosquitto.h	58;"	d
MOSQ_LOG_ERR	lib/mosquitto.h	57;"	d
MOSQ_LOG_INFO	lib/mosquitto.h	54;"	d
MOSQ_LOG_NONE	lib/mosquitto.h	53;"	d
MOSQ_LOG_NOTICE	lib/mosquitto.h	55;"	d
MOSQ_LOG_SUBSCRIBE	lib/mosquitto.h	59;"	d
MOSQ_LOG_UNSUBSCRIBE	lib/mosquitto.h	60;"	d
MOSQ_LOG_WARNING	lib/mosquitto.h	56;"	d
MOSQ_LOG_WEBSOCKETS	lib/mosquitto.h	61;"	d
MOSQ_LSB	lib/net_mosq.h	50;"	d
MOSQ_MQTT_ID_MAX_LENGTH	lib/mosquitto.h	92;"	d
MOSQ_MSB	lib/net_mosq.h	49;"	d
MOSQ_OBJS	lib/Makefile	/^MOSQ_OBJS=mosquitto.o \\$/;"	m
MOSQ_OPT_PROTOCOL_VERSION	lib/mosquitto.h	/^	MOSQ_OPT_PROTOCOL_VERSION = 1,$/;"	e	enum:mosq_opt_t
MQTT_MAX_PAYLOAD	lib/mqtt3_protocol.h	51;"	d
MQTT_PROTOCOL_V31	lib/mosquitto.h	94;"	d
MQTT_PROTOCOL_V311	lib/mosquitto.h	95;"	d
MSGMODE_CMD	client/client_shared.h	24;"	d
MSGMODE_FILE	client/client_shared.h	27;"	d
MSGMODE_NONE	client/client_shared.h	23;"	d
MSGMODE_NULL	client/client_shared.h	28;"	d
MSGMODE_STDIN_FILE	client/client_shared.h	26;"	d
MSGMODE_STDIN_LINE	client/client_shared.h	25;"	d
PINGREQ	lib/mqtt3_protocol.h	40;"	d
PINGRESP	lib/mqtt3_protocol.h	41;"	d
PROTOCOL_NAME_v31	lib/mqtt3_protocol.h	22;"	d
PROTOCOL_NAME_v311	lib/mqtt3_protocol.h	25;"	d
PROTOCOL_VERSION_v31	lib/mqtt3_protocol.h	23;"	d
PROTOCOL_VERSION_v311	lib/mqtt3_protocol.h	26;"	d
PUBACK	lib/mqtt3_protocol.h	32;"	d
PUBCOMP	lib/mqtt3_protocol.h	35;"	d
PUBLISH	lib/mqtt3_protocol.h	31;"	d
PUBREC	lib/mqtt3_protocol.h	33;"	d
PUBREL	lib/mqtt3_protocol.h	34;"	d
REAL_WITH_MEMORY_TRACKING	lib/memory_mosq.h	24;"	d
REAL_WITH_TLS_PSK	lib/tls_mosq.h	31;"	d
SOCKS_ATYPE_DOMAINNAME	lib/socks_mosq.c	31;"	d	file:
SOCKS_ATYPE_IP_V4	lib/socks_mosq.c	30;"	d	file:
SOCKS_ATYPE_IP_V6	lib/socks_mosq.c	32;"	d	file:
SOCKS_AUTH_GSS	lib/socks_mosq.c	26;"	d	file:
SOCKS_AUTH_NONE	lib/socks_mosq.c	25;"	d	file:
SOCKS_AUTH_NO_ACCEPTABLE	lib/socks_mosq.c	28;"	d	file:
SOCKS_AUTH_USERPASS	lib/socks_mosq.c	27;"	d	file:
SOCKS_MOSQ_H	lib/socks_mosq.h	18;"	d
SOCKS_REPLY_ADDRESS_TYPE_NOT_SUPPORTED	lib/socks_mosq.c	42;"	d	file:
SOCKS_REPLY_COMMAND_NOT_SUPPORTED	lib/socks_mosq.c	41;"	d	file:
SOCKS_REPLY_CONNECTION_NOT_ALLOWED	lib/socks_mosq.c	36;"	d	file:
SOCKS_REPLY_CONNECTION_REFUSED	lib/socks_mosq.c	39;"	d	file:
SOCKS_REPLY_GENERAL_FAILURE	lib/socks_mosq.c	35;"	d	file:
SOCKS_REPLY_HOST_UNREACHABLE	lib/socks_mosq.c	38;"	d	file:
SOCKS_REPLY_NETWORK_UNREACHABLE	lib/socks_mosq.c	37;"	d	file:
SOCKS_REPLY_SUCCEEDED	lib/socks_mosq.c	34;"	d	file:
SOCKS_REPLY_TTL_EXPIRED	lib/socks_mosq.c	40;"	d	file:
SOVERSION	config.mk	/^SOVERSION=1$/;"	m
SSL_DATA_PENDING	lib/tls_mosq.h	21;"	d
SSL_DATA_PENDING	lib/tls_mosq.h	23;"	d
STATUS_CONNACK_RECVD	client/pub_client.c	35;"	d	file:
STATUS_CONNECTING	client/pub_client.c	34;"	d	file:
STATUS_WAITING	client/pub_client.c	36;"	d	file:
STREMPTY	lib/mosquitto_internal.h	270;"	d
SUBACK	lib/mqtt3_protocol.h	37;"	d
SUBSCRIBE	lib/mqtt3_protocol.h	36;"	d
TIMESTAMP	config.mk	/^TIMESTAMP:=$(shell date "+%F %T%z")$/;"	m
UNAME	config.mk	/^UNAME:=$(shell uname -s)$/;"	m
UNSUBACK	lib/mqtt3_protocol.h	39;"	d
UNSUBSCRIBE	lib/mqtt3_protocol.h	38;"	d
VERSION	client/sub_client.c	124;"	d	file:
WITH_THREADING	config.mk	/^WITH_THREADING:=yes$/;"	m
_CLIENT_CONFIG_H	client/client_shared.h	18;"	d
_DUMMYPTHREAD_H_	lib/dummypthread.h	2;"	d
_LOGGING_MOSQ_H_	lib/logging_mosq.h	17;"	d
_MEMORY_MOSQ_H_	lib/memory_mosq.h	18;"	d
_MESSAGES_MOSQ_H_	lib/messages_mosq.h	17;"	d
_MOSQUITTO_H_	lib/mosquitto.h	18;"	d
_MOSQUITTO_INTERNAL_H_	lib/mosquitto_internal.h	18;"	d
_MQTT3_PROTOCOL_H_	lib/mqtt3_protocol.h	18;"	d
_NET_MOSQ_H_	lib/net_mosq.h	17;"	d
_READ_HANDLE_H_	lib/read_handle.h	17;"	d
_SEND_MOSQ_H_	lib/send_mosq.h	17;"	d
_TIME_MOSQ_H_	lib/time_mosq.h	18;"	d
_TLS_MOSQ_H_	lib/tls_mosq.h	18;"	d
_UTIL_MOSQ_H_	lib/util_mosq.h	17;"	d
_WILL_MOSQ_H_	lib/will_mosq.h	18;"	d
_WIN32_WINNT	lib/time_mosq.c	23;"	d	file:
_mosquitto_calloc	lib/memory_mosq.c	/^void *_mosquitto_calloc(size_t nmemb, size_t size)$/;"	f
_mosquitto_check_keepalive	lib/util_mosq.c	/^void _mosquitto_check_keepalive(struct mosquitto_db *db, struct mosquitto *mosq)$/;"	f
_mosquitto_connect_init	lib/mosquitto.c	/^static int _mosquitto_connect_init(struct mosquitto *mosq, const char *host, int port, int keepalive, const char *bind_address)$/;"	f	file:
_mosquitto_destroy	lib/mosquitto.c	/^void _mosquitto_destroy(struct mosquitto *mosq)$/;"	f
_mosquitto_fopen	lib/util_mosq.c	/^FILE *_mosquitto_fopen(const char *path, const char *mode)$/;"	f
_mosquitto_free	lib/memory_mosq.c	/^void _mosquitto_free(void *mem)$/;"	f
_mosquitto_handle_connack	lib/read_handle_client.c	/^int _mosquitto_handle_connack(struct mosquitto *mosq)$/;"	f
_mosquitto_handle_pingreq	lib/read_handle_shared.c	/^int _mosquitto_handle_pingreq(struct mosquitto *mosq)$/;"	f
_mosquitto_handle_pingresp	lib/read_handle_shared.c	/^int _mosquitto_handle_pingresp(struct mosquitto *mosq)$/;"	f
_mosquitto_handle_pubackcomp	lib/read_handle_shared.c	/^int _mosquitto_handle_pubackcomp(struct mosquitto_db *db, struct mosquitto *mosq, const char *type)$/;"	f
_mosquitto_handle_publish	lib/read_handle.c	/^int _mosquitto_handle_publish(struct mosquitto *mosq)$/;"	f
_mosquitto_handle_pubrec	lib/read_handle_shared.c	/^int _mosquitto_handle_pubrec(struct mosquitto *mosq)$/;"	f
_mosquitto_handle_pubrel	lib/read_handle_shared.c	/^int _mosquitto_handle_pubrel(struct mosquitto_db *db, struct mosquitto *mosq)$/;"	f
_mosquitto_handle_suback	lib/read_handle_shared.c	/^int _mosquitto_handle_suback(struct mosquitto *mosq)$/;"	f
_mosquitto_handle_unsuback	lib/read_handle_shared.c	/^int _mosquitto_handle_unsuback(struct mosquitto *mosq)$/;"	f
_mosquitto_hex2bin	lib/util_mosq.c	/^int _mosquitto_hex2bin(const char *hex, unsigned char *bin, int bin_max_len)$/;"	f
_mosquitto_log_printf	lib/logging_mosq.c	/^int _mosquitto_log_printf(struct mosquitto *mosq, int priority, const char *fmt, ...)$/;"	f
_mosquitto_loop_rc_handle	lib/mosquitto.c	/^static int _mosquitto_loop_rc_handle(struct mosquitto *mosq, int rc)$/;"	f	file:
_mosquitto_malloc	lib/memory_mosq.c	/^void *_mosquitto_malloc(size_t size)$/;"	f
_mosquitto_max_memory_used	lib/memory_mosq.c	/^unsigned long _mosquitto_max_memory_used(void)$/;"	f
_mosquitto_memory_used	lib/memory_mosq.c	/^unsigned long _mosquitto_memory_used(void)$/;"	f
_mosquitto_message_cleanup	lib/messages_mosq.c	/^void _mosquitto_message_cleanup(struct mosquitto_message_all **message)$/;"	f
_mosquitto_message_cleanup_all	lib/messages_mosq.c	/^void _mosquitto_message_cleanup_all(struct mosquitto *mosq)$/;"	f
_mosquitto_message_delete	lib/messages_mosq.c	/^int _mosquitto_message_delete(struct mosquitto *mosq, uint16_t mid, enum mosquitto_msg_direction dir)$/;"	f
_mosquitto_message_out_update	lib/messages_mosq.c	/^int _mosquitto_message_out_update(struct mosquitto *mosq, uint16_t mid, enum mosquitto_msg_state state)$/;"	f
_mosquitto_message_queue	lib/messages_mosq.c	/^int _mosquitto_message_queue(struct mosquitto *mosq, struct mosquitto_message_all *message, enum mosquitto_msg_direction dir)$/;"	f
_mosquitto_message_remove	lib/messages_mosq.c	/^int _mosquitto_message_remove(struct mosquitto *mosq, uint16_t mid, enum mosquitto_msg_direction dir, struct mosquitto_message_all **message)$/;"	f
_mosquitto_message_retry_check	lib/messages_mosq.c	/^void _mosquitto_message_retry_check(struct mosquitto *mosq)$/;"	f
_mosquitto_message_retry_check_actual	lib/messages_mosq.c	/^void _mosquitto_message_retry_check_actual(struct mosquitto *mosq, struct mosquitto_message_all *messages, pthread_mutex_t *mutex)$/;"	f
_mosquitto_messages_reconnect_reset	lib/messages_mosq.c	/^void _mosquitto_messages_reconnect_reset(struct mosquitto *mosq)$/;"	f
_mosquitto_mid_generate	lib/util_mosq.c	/^uint16_t _mosquitto_mid_generate(struct mosquitto *mosq)$/;"	f
_mosquitto_net_cleanup	lib/net_mosq.c	/^void _mosquitto_net_cleanup(void)$/;"	f
_mosquitto_net_init	lib/net_mosq.c	/^void _mosquitto_net_init(void)$/;"	f
_mosquitto_net_read	lib/net_mosq.c	/^ssize_t _mosquitto_net_read(struct mosquitto *mosq, void *buf, size_t count)$/;"	f
_mosquitto_net_write	lib/net_mosq.c	/^ssize_t _mosquitto_net_write(struct mosquitto *mosq, void *buf, size_t count)$/;"	f
_mosquitto_packet	lib/mosquitto_internal.h	/^struct _mosquitto_packet{$/;"	s
_mosquitto_packet_alloc	lib/util_mosq.c	/^int _mosquitto_packet_alloc(struct _mosquitto_packet *packet)$/;"	f
_mosquitto_packet_cleanup	lib/net_mosq.c	/^void _mosquitto_packet_cleanup(struct _mosquitto_packet *packet)$/;"	f
_mosquitto_packet_handle	lib/read_handle.c	/^int _mosquitto_packet_handle(struct mosquitto *mosq)$/;"	f
_mosquitto_packet_queue	lib/net_mosq.c	/^int _mosquitto_packet_queue(struct mosquitto *mosq, struct _mosquitto_packet *packet)$/;"	f
_mosquitto_packet_read	lib/net_mosq.c	/^int _mosquitto_packet_read(struct mosquitto_db *db, struct mosquitto *mosq)$/;"	f
_mosquitto_packet_write	lib/net_mosq.c	/^int _mosquitto_packet_write(struct mosquitto *mosq)$/;"	f
_mosquitto_protocol	lib/mosquitto_internal.h	/^enum _mosquitto_protocol {$/;"	g
_mosquitto_read_byte	lib/net_mosq.c	/^int _mosquitto_read_byte(struct _mosquitto_packet *packet, uint8_t *byte)$/;"	f
_mosquitto_read_bytes	lib/net_mosq.c	/^int _mosquitto_read_bytes(struct _mosquitto_packet *packet, void *bytes, uint32_t count)$/;"	f
_mosquitto_read_string	lib/net_mosq.c	/^int _mosquitto_read_string(struct _mosquitto_packet *packet, char **str)$/;"	f
_mosquitto_read_uint16	lib/net_mosq.c	/^int _mosquitto_read_uint16(struct _mosquitto_packet *packet, uint16_t *word)$/;"	f
_mosquitto_realloc	lib/memory_mosq.c	/^void *_mosquitto_realloc(void *ptr, size_t size)$/;"	f
_mosquitto_reconnect	lib/mosquitto.c	/^static int _mosquitto_reconnect(struct mosquitto *mosq, bool blocking)$/;"	f	file:
_mosquitto_send_command_with_mid	lib/send_mosq.c	/^int _mosquitto_send_command_with_mid(struct mosquitto *mosq, uint8_t command, uint16_t mid, bool dup)$/;"	f
_mosquitto_send_connect	lib/send_client_mosq.c	/^int _mosquitto_send_connect(struct mosquitto *mosq, uint16_t keepalive, bool clean_session)$/;"	f
_mosquitto_send_disconnect	lib/send_client_mosq.c	/^int _mosquitto_send_disconnect(struct mosquitto *mosq)$/;"	f
_mosquitto_send_pingreq	lib/send_mosq.c	/^int _mosquitto_send_pingreq(struct mosquitto *mosq)$/;"	f
_mosquitto_send_pingresp	lib/send_mosq.c	/^int _mosquitto_send_pingresp(struct mosquitto *mosq)$/;"	f
_mosquitto_send_puback	lib/send_mosq.c	/^int _mosquitto_send_puback(struct mosquitto *mosq, uint16_t mid)$/;"	f
_mosquitto_send_pubcomp	lib/send_mosq.c	/^int _mosquitto_send_pubcomp(struct mosquitto *mosq, uint16_t mid)$/;"	f
_mosquitto_send_publish	lib/send_mosq.c	/^int _mosquitto_send_publish(struct mosquitto *mosq, uint16_t mid, const char *topic, uint32_t payloadlen, const void *payload, int qos, bool retain, bool dup)$/;"	f
_mosquitto_send_pubrec	lib/send_mosq.c	/^int _mosquitto_send_pubrec(struct mosquitto *mosq, uint16_t mid)$/;"	f
_mosquitto_send_pubrel	lib/send_mosq.c	/^int _mosquitto_send_pubrel(struct mosquitto *mosq, uint16_t mid)$/;"	f
_mosquitto_send_real_publish	lib/send_mosq.c	/^int _mosquitto_send_real_publish(struct mosquitto *mosq, uint16_t mid, const char *topic, uint32_t payloadlen, const void *payload, int qos, bool retain, bool dup)$/;"	f
_mosquitto_send_simple_command	lib/send_mosq.c	/^int _mosquitto_send_simple_command(struct mosquitto *mosq, uint8_t command)$/;"	f
_mosquitto_send_subscribe	lib/send_client_mosq.c	/^int _mosquitto_send_subscribe(struct mosquitto *mosq, int *mid, const char *topic, uint8_t topic_qos)$/;"	f
_mosquitto_send_unsubscribe	lib/send_client_mosq.c	/^int _mosquitto_send_unsubscribe(struct mosquitto *mosq, int *mid, const char *topic)$/;"	f
_mosquitto_server_certificate_verify	lib/tls_mosq.c	/^int _mosquitto_server_certificate_verify(int preverify_ok, X509_STORE_CTX *ctx)$/;"	f
_mosquitto_socket_close	lib/net_mosq.c	/^int _mosquitto_socket_close(struct mosquitto_db *db, struct mosquitto *mosq)$/;"	f
_mosquitto_socket_connect	lib/net_mosq.c	/^int _mosquitto_socket_connect(struct mosquitto *mosq, const char *host, uint16_t port, const char *bind_address, bool blocking)$/;"	f
_mosquitto_socket_nonblock	lib/net_mosq.c	/^int _mosquitto_socket_nonblock(mosq_sock_t sock)$/;"	f
_mosquitto_socketpair	lib/net_mosq.c	/^int _mosquitto_socketpair(mosq_sock_t *pairR, mosq_sock_t *pairW)$/;"	f
_mosquitto_strdup	lib/memory_mosq.c	/^char *_mosquitto_strdup(const char *s)$/;"	f
_mosquitto_thread_main	lib/thread_mosq.c	/^void *_mosquitto_thread_main(void *obj)$/;"	f
_mosquitto_transport	lib/mosquitto_internal.h	/^enum _mosquitto_transport {$/;"	g
_mosquitto_try_connect	lib/net_mosq.c	/^int _mosquitto_try_connect(struct mosquitto *mosq, const char *host, uint16_t port, mosq_sock_t *sock, const char *bind_address, bool blocking)$/;"	f
_mosquitto_verify_certificate_hostname	lib/tls_mosq.c	/^int _mosquitto_verify_certificate_hostname(X509 *cert, const char *hostname)$/;"	f
_mosquitto_will_clear	lib/will_mosq.c	/^int _mosquitto_will_clear(struct mosquitto *mosq)$/;"	f
_mosquitto_will_set	lib/will_mosq.c	/^int _mosquitto_will_set(struct mosquitto *mosq, const char *topic, int payloadlen, const void *payload, int qos, bool retain)$/;"	f
_mosquitto_write_byte	lib/net_mosq.c	/^void _mosquitto_write_byte(struct _mosquitto_packet *packet, uint8_t byte)$/;"	f
_mosquitto_write_bytes	lib/net_mosq.c	/^void _mosquitto_write_bytes(struct _mosquitto_packet *packet, const void *bytes, uint32_t count)$/;"	f
_mosquitto_write_string	lib/net_mosq.c	/^void _mosquitto_write_string(struct _mosquitto_packet *packet, const char *str, uint16_t length)$/;"	f
_mosquitto_write_uint16	lib/net_mosq.c	/^void _mosquitto_write_uint16(struct _mosquitto_packet *packet, uint16_t word)$/;"	f
_windows_time_version_check	lib/time_mosq.c	/^void _windows_time_version_check(void)$/;"	f
achan	lib/mosquitto_internal.h	/^	ares_channel achan;$/;"	m	struct:mosquitto
acl_list	lib/mosquitto_internal.h	/^	struct _mosquitto_acl_user *acl_list;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::_mosquitto_acl_user
address	lib/mosquitto_internal.h	/^	char *address;$/;"	m	struct:mosquitto
bind_address	client/client_shared.h	/^	char *bind_address;$/;"	m	struct:mosq_config
bind_address	lib/mosquitto_internal.h	/^	char *bind_address;$/;"	m	struct:mosquitto
bool	lib/mosquitto.h	36;"	d
bridge	lib/mosquitto_internal.h	/^	struct _mqtt3_bridge *bridge;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::_mqtt3_bridge
cafile	client/client_shared.h	/^	char *cafile;$/;"	m	struct:mosq_config
callback_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t callback_mutex;$/;"	m	struct:mosquitto
capath	client/client_shared.h	/^	char *capath;$/;"	m	struct:mosq_config
certfile	client/client_shared.h	/^	char *certfile;$/;"	m	struct:mosq_config
ciphers	client/client_shared.h	/^	char *ciphers;$/;"	m	struct:mosq_config
clean_session	client/client_shared.h	/^	bool clean_session; \/* sub *\/$/;"	m	struct:mosq_config
clean_session	lib/mosquitto_internal.h	/^	bool clean_session;$/;"	m	struct:mosquitto
client_config_cleanup	client/client_shared.c	/^void client_config_cleanup(struct mosq_config *cfg)$/;"	f
client_config_line_proc	client/client_shared.c	/^int client_config_line_proc(struct mosq_config *cfg, int pub_or_sub, int argc, char *argv[])$/;"	f
client_config_load	client/client_shared.c	/^int client_config_load(struct mosq_config *cfg, int pub_or_sub, int argc, char *argv[])$/;"	f
client_connect	client/client_shared.c	/^int client_connect(struct mosquitto *mosq, struct mosq_config *cfg)$/;"	f
client_id_generate	client/client_shared.c	/^int client_id_generate(struct mosq_config *cfg, const char *id_base)$/;"	f
client_opts_set	client/client_shared.c	/^int client_opts_set(struct mosquitto *mosq, struct mosq_config *cfg)$/;"	f
command	lib/mosquitto_internal.h	/^	uint8_t command;$/;"	m	struct:_mosquitto_packet
connected	client/pub_client.c	/^static bool connected = true;$/;"	v	file:
current_out_packet	lib/mosquitto_internal.h	/^	struct _mosquitto_packet *current_out_packet;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::_mosquitto_packet
current_out_packet_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t current_out_packet_mutex;$/;"	m	struct:mosquitto
debug	client/client_shared.h	/^	bool debug;$/;"	m	struct:mosq_config
disconnect_sent	client/pub_client.c	/^static bool disconnect_sent = false;$/;"	v	file:
disconnect_t	lib/mosquitto_internal.h	/^	time_t disconnect_t;$/;"	m	struct:mosquitto
dup	lib/mosquitto_internal.h	/^	bool dup;$/;"	m	struct:mosquitto_message_all
eol	client/client_shared.h	/^	bool eol; \/* sub *\/$/;"	m	struct:mosq_config
false	lib/mosquitto.h	38;"	d
file_input	client/client_shared.h	/^	char *file_input; \/* pub *\/$/;"	m	struct:mosq_config
filter_out_count	client/client_shared.h	/^	int filter_out_count; \/* sub *\/$/;"	m	struct:mosq_config
filter_outs	client/client_shared.h	/^	char **filter_outs; \/* sub *\/$/;"	m	struct:mosq_config
for_free_next	lib/mosquitto_internal.h	/^	struct mosquitto *for_free_next;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto
hh_id	lib/mosquitto_internal.h	/^	UT_hash_handle hh_id;$/;"	m	struct:mosquitto
hh_sock	lib/mosquitto_internal.h	/^	UT_hash_handle hh_sock;$/;"	m	struct:mosquitto
host	client/client_shared.h	/^	char *host;$/;"	m	struct:mosq_config
host	lib/mosquitto_internal.h	/^	char *host;$/;"	m	struct:mosquitto
id	client/client_shared.h	/^	char *id;$/;"	m	struct:mosq_config
id	lib/mosquitto_internal.h	/^	char *id;$/;"	m	struct:mosquitto
id_prefix	client/client_shared.h	/^	char *id_prefix;$/;"	m	struct:mosq_config
in_callback	lib/mosquitto_internal.h	/^	bool in_callback;$/;"	m	struct:mosquitto
in_message_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t in_message_mutex;$/;"	m	struct:mosquitto
in_messages	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *in_messages;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message_all
in_messages_last	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *in_messages_last;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message_all
in_packet	lib/mosquitto_internal.h	/^	struct _mosquitto_packet in_packet;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::_mosquitto_packet
in_queue_len	lib/mosquitto_internal.h	/^	int in_queue_len;$/;"	m	struct:mosquitto
inflight_messages	lib/mosquitto_internal.h	/^	int inflight_messages;$/;"	m	struct:mosquitto
init_config	client/client_shared.c	/^void init_config(struct mosq_config *cfg)$/;"	f
insecure	client/client_shared.h	/^	bool insecure;$/;"	m	struct:mosq_config
is_bridge	lib/mosquitto_internal.h	/^	bool is_bridge;$/;"	m	struct:mosquitto
is_dropping	lib/mosquitto_internal.h	/^	bool is_dropping;$/;"	m	struct:mosquitto
keepalive	client/client_shared.h	/^	int keepalive;$/;"	m	struct:mosq_config
keepalive	lib/mosquitto_internal.h	/^	uint16_t keepalive;$/;"	m	struct:mosquitto
keyfile	client/client_shared.h	/^	char *keyfile;$/;"	m	struct:mosq_config
last_mid	client/pub_client.c	/^static int last_mid = -1;$/;"	v	file:
last_mid	lib/mosquitto_internal.h	/^	uint16_t last_mid;$/;"	m	struct:mosquitto
last_mid_sent	client/pub_client.c	/^static int last_mid_sent = -1;$/;"	v	file:
last_msg	lib/mosquitto_internal.h	/^	struct mosquitto_client_msg *last_msg;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_client_msg
last_msg_in	lib/mosquitto_internal.h	/^	time_t last_msg_in;$/;"	m	struct:mosquitto
last_retry_check	lib/mosquitto_internal.h	/^	time_t last_retry_check;$/;"	m	struct:mosquitto
libmosq_EXPORT	lib/mosquitto.h	26;"	d
libmosq_EXPORT	lib/mosquitto.h	28;"	d
libmosq_EXPORT	lib/mosquitto.h	31;"	d
listener	lib/mosquitto_internal.h	/^	struct _mqtt3_listener *listener;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::_mqtt3_listener
load_file	client/pub_client.c	/^int load_file(const char *filename)$/;"	f
load_stdin	client/pub_client.c	/^int load_stdin(void)$/;"	f
log_callback_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t log_callback_mutex;$/;"	m	struct:mosquitto
main	client/pub_client.c	/^int main(void)$/;"	f
main	client/sub_client.c	/^int main(int argc, char *argv[])$/;"	f
malloc_usable_size	lib/memory_mosq.c	27;"	d	file:
max_inflight	client/client_shared.h	/^	unsigned int max_inflight;$/;"	m	struct:mosq_config
max_inflight_messages	lib/mosquitto_internal.h	/^	int max_inflight_messages;$/;"	m	struct:mosquitto
max_memcount	lib/memory_mosq.c	/^static unsigned long max_memcount = 0;$/;"	v	file:
memcount	lib/memory_mosq.c	/^static unsigned long memcount = 0;$/;"	v	file:
message	client/client_shared.h	/^	char *message; \/* pub *\/$/;"	m	struct:mosq_config
message	client/pub_client.c	/^static char *message = NULL;$/;"	v	file:
message_retry	lib/mosquitto_internal.h	/^	unsigned int message_retry;$/;"	m	struct:mosquitto
mid	lib/mosquitto.h	/^	int mid;$/;"	m	struct:mosquitto_message
mid	lib/mosquitto_internal.h	/^	uint16_t mid;$/;"	m	struct:_mosquitto_packet
mid_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t mid_mutex;$/;"	m	struct:mosquitto
mid_sent	client/pub_client.c	/^static int mid_sent = 0;$/;"	v	file:
mode	client/pub_client.c	/^static int mode = MSGMODE_NONE;$/;"	v	file:
mosq_config	client/client_shared.h	/^struct mosq_config {$/;"	s
mosq_cs_connect_async	lib/mosquitto_internal.h	/^	mosq_cs_connect_async = 3,$/;"	e	enum:mosquitto_client_state
mosq_cs_connect_pending	lib/mosquitto_internal.h	/^	mosq_cs_connect_pending = 4,$/;"	e	enum:mosquitto_client_state
mosq_cs_connect_srv	lib/mosquitto_internal.h	/^	mosq_cs_connect_srv = 5,$/;"	e	enum:mosquitto_client_state
mosq_cs_connected	lib/mosquitto_internal.h	/^	mosq_cs_connected = 1,$/;"	e	enum:mosquitto_client_state
mosq_cs_disconnect_ws	lib/mosquitto_internal.h	/^	mosq_cs_disconnect_ws = 6,$/;"	e	enum:mosquitto_client_state
mosq_cs_disconnected	lib/mosquitto_internal.h	/^	mosq_cs_disconnected = 7,$/;"	e	enum:mosquitto_client_state
mosq_cs_disconnecting	lib/mosquitto_internal.h	/^	mosq_cs_disconnecting = 2,$/;"	e	enum:mosquitto_client_state
mosq_cs_expiring	lib/mosquitto_internal.h	/^	mosq_cs_expiring = 15,$/;"	e	enum:mosquitto_client_state
mosq_cs_new	lib/mosquitto_internal.h	/^	mosq_cs_new = 0,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_auth_ok	lib/mosquitto_internal.h	/^	mosq_cs_socks5_auth_ok = 12,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_new	lib/mosquitto_internal.h	/^	mosq_cs_socks5_new = 8,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_reply	lib/mosquitto_internal.h	/^	mosq_cs_socks5_reply = 11,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_request	lib/mosquitto_internal.h	/^	mosq_cs_socks5_request = 10,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_send_userpass	lib/mosquitto_internal.h	/^	mosq_cs_socks5_send_userpass = 14,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_start	lib/mosquitto_internal.h	/^	mosq_cs_socks5_start = 9,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_userpass_reply	lib/mosquitto_internal.h	/^	mosq_cs_socks5_userpass_reply = 13,$/;"	e	enum:mosquitto_client_state
mosq_err_t	lib/mosquitto.h	/^enum mosq_err_t {$/;"	g
mosq_md_in	lib/mosquitto_internal.h	/^	mosq_md_in = 0,$/;"	e	enum:mosquitto_msg_direction
mosq_md_out	lib/mosquitto_internal.h	/^	mosq_md_out = 1$/;"	e	enum:mosquitto_msg_direction
mosq_ms_invalid	lib/mosquitto_internal.h	/^	mosq_ms_invalid = 0,$/;"	e	enum:mosquitto_msg_state
mosq_ms_publish_qos0	lib/mosquitto_internal.h	/^	mosq_ms_publish_qos0 = 1,$/;"	e	enum:mosquitto_msg_state
mosq_ms_publish_qos1	lib/mosquitto_internal.h	/^	mosq_ms_publish_qos1 = 2,$/;"	e	enum:mosquitto_msg_state
mosq_ms_publish_qos2	lib/mosquitto_internal.h	/^	mosq_ms_publish_qos2 = 4,$/;"	e	enum:mosquitto_msg_state
mosq_ms_queued	lib/mosquitto_internal.h	/^	mosq_ms_queued = 11$/;"	e	enum:mosquitto_msg_state
mosq_ms_resend_pubcomp	lib/mosquitto_internal.h	/^	mosq_ms_resend_pubcomp = 8,$/;"	e	enum:mosquitto_msg_state
mosq_ms_resend_pubrel	lib/mosquitto_internal.h	/^	mosq_ms_resend_pubrel = 6,$/;"	e	enum:mosquitto_msg_state
mosq_ms_send_pubrec	lib/mosquitto_internal.h	/^	mosq_ms_send_pubrec = 10,$/;"	e	enum:mosquitto_msg_state
mosq_ms_wait_for_puback	lib/mosquitto_internal.h	/^	mosq_ms_wait_for_puback = 3,$/;"	e	enum:mosquitto_msg_state
mosq_ms_wait_for_pubcomp	lib/mosquitto_internal.h	/^	mosq_ms_wait_for_pubcomp = 9,$/;"	e	enum:mosquitto_msg_state
mosq_ms_wait_for_pubrec	lib/mosquitto_internal.h	/^	mosq_ms_wait_for_pubrec = 5,$/;"	e	enum:mosquitto_msg_state
mosq_ms_wait_for_pubrel	lib/mosquitto_internal.h	/^	mosq_ms_wait_for_pubrel = 7,$/;"	e	enum:mosquitto_msg_state
mosq_opt_t	lib/mosquitto.h	/^enum mosq_opt_t {$/;"	g
mosq_p_invalid	lib/mosquitto_internal.h	/^	mosq_p_invalid = 0,$/;"	e	enum:_mosquitto_protocol
mosq_p_mqtt31	lib/mosquitto_internal.h	/^	mosq_p_mqtt31 = 1,$/;"	e	enum:_mosquitto_protocol
mosq_p_mqtt311	lib/mosquitto_internal.h	/^	mosq_p_mqtt311 = 2,$/;"	e	enum:_mosquitto_protocol
mosq_p_mqtts	lib/mosquitto_internal.h	/^	mosq_p_mqtts = 3$/;"	e	enum:_mosquitto_protocol
mosq_sock_t	lib/mosquitto_internal.h	/^typedef SOCKET mosq_sock_t;$/;"	t
mosq_sock_t	lib/mosquitto_internal.h	/^typedef int mosq_sock_t;$/;"	t
mosq_t_invalid	lib/mosquitto_internal.h	/^	mosq_t_invalid = 0,$/;"	e	enum:_mosquitto_transport
mosq_t_sctp	lib/mosquitto_internal.h	/^	mosq_t_sctp = 3$/;"	e	enum:_mosquitto_transport
mosq_t_tcp	lib/mosquitto_internal.h	/^	mosq_t_tcp = 1,$/;"	e	enum:_mosquitto_transport
mosq_t_ws	lib/mosquitto_internal.h	/^	mosq_t_ws = 2,$/;"	e	enum:_mosquitto_transport
mosq_ts_external	lib/mosquitto_internal.h	/^	mosq_ts_external	\/* Threads started by external code *\/$/;"	e	enum:mosquitto__threaded_state
mosq_ts_none	lib/mosquitto_internal.h	/^	mosq_ts_none,		\/* No threads in use *\/$/;"	e	enum:mosquitto__threaded_state
mosq_ts_self	lib/mosquitto_internal.h	/^	mosq_ts_self,		\/* Threads started by libmosquitto *\/$/;"	e	enum:mosquitto__threaded_state
mosquitto	lib/mosquitto_internal.h	/^struct mosquitto {$/;"	s
mosquitto__cmp_hostname_wildcard	lib/tls_mosq.c	/^int mosquitto__cmp_hostname_wildcard(char *certname, const char *hostname)$/;"	f
mosquitto__parse_socks_url	client/client_shared.c	/^static int mosquitto__parse_socks_url(struct mosq_config *cfg, char *url)$/;"	f	file:
mosquitto__socks5_read	lib/socks_mosq.c	/^int mosquitto__socks5_read(struct mosquitto *mosq)$/;"	f
mosquitto__socks5_send	lib/socks_mosq.c	/^int mosquitto__socks5_send(struct mosquitto *mosq)$/;"	f
mosquitto__threaded_state	lib/mosquitto_internal.h	/^enum mosquitto__threaded_state {$/;"	g
mosquitto__urldecode	client/client_shared.c	/^static int mosquitto__urldecode(char *str)$/;"	f	file:
mosquitto_client_state	lib/mosquitto_internal.h	/^enum mosquitto_client_state {$/;"	g
mosquitto_connack_string	lib/mosquitto.c	/^const char *mosquitto_connack_string(int connack_code)$/;"	f
mosquitto_connect	lib/mosquitto.c	/^int mosquitto_connect(struct mosquitto *mosq, const char *host, int port, int keepalive)$/;"	f
mosquitto_connect_async	lib/mosquitto.c	/^int mosquitto_connect_async(struct mosquitto *mosq, const char *host, int port, int keepalive)$/;"	f
mosquitto_connect_bind	lib/mosquitto.c	/^int mosquitto_connect_bind(struct mosquitto *mosq, const char *host, int port, int keepalive, const char *bind_address)$/;"	f
mosquitto_connect_bind_async	lib/mosquitto.c	/^int mosquitto_connect_bind_async(struct mosquitto *mosq, const char *host, int port, int keepalive, const char *bind_address)$/;"	f
mosquitto_connect_callback_set	lib/mosquitto.c	/^void mosquitto_connect_callback_set(struct mosquitto *mosq, void (*on_connect)(struct mosquitto *, void *, int))$/;"	f
mosquitto_connect_srv	lib/srv_mosq.c	/^int mosquitto_connect_srv(struct mosquitto *mosq, const char *host, int keepalive, const char *bind_address)$/;"	f
mosquitto_destroy	lib/mosquitto.c	/^void mosquitto_destroy(struct mosquitto *mosq)$/;"	f
mosquitto_disconnect	lib/mosquitto.c	/^int mosquitto_disconnect(struct mosquitto *mosq)$/;"	f
mosquitto_disconnect_callback_set	lib/mosquitto.c	/^void mosquitto_disconnect_callback_set(struct mosquitto *mosq, void (*on_disconnect)(struct mosquitto *, void *, int))$/;"	f
mosquitto_lib_cleanup	lib/mosquitto.c	/^int mosquitto_lib_cleanup(void)$/;"	f
mosquitto_lib_init	lib/mosquitto.c	/^int mosquitto_lib_init(void)$/;"	f
mosquitto_lib_version	lib/mosquitto.c	/^int mosquitto_lib_version(int *major, int *minor, int *revision)$/;"	f
mosquitto_log_callback_set	lib/mosquitto.c	/^void mosquitto_log_callback_set(struct mosquitto *mosq, void (*on_log)(struct mosquitto *, void *, int, const char *))$/;"	f
mosquitto_loop	lib/mosquitto.c	/^int mosquitto_loop(struct mosquitto *mosq, int timeout, int max_packets)$/;"	f
mosquitto_loop_forever	lib/mosquitto.c	/^int mosquitto_loop_forever(struct mosquitto *mosq, int timeout, int max_packets)$/;"	f
mosquitto_loop_misc	lib/mosquitto.c	/^int mosquitto_loop_misc(struct mosquitto *mosq)$/;"	f
mosquitto_loop_read	lib/mosquitto.c	/^int mosquitto_loop_read(struct mosquitto *mosq, int max_packets)$/;"	f
mosquitto_loop_start	lib/thread_mosq.c	/^int mosquitto_loop_start(struct mosquitto *mosq)$/;"	f
mosquitto_loop_stop	lib/thread_mosq.c	/^int mosquitto_loop_stop(struct mosquitto *mosq, bool force)$/;"	f
mosquitto_loop_write	lib/mosquitto.c	/^int mosquitto_loop_write(struct mosquitto *mosq, int max_packets)$/;"	f
mosquitto_max_inflight_messages_set	lib/messages_mosq.c	/^int mosquitto_max_inflight_messages_set(struct mosquitto *mosq, unsigned int max_inflight_messages)$/;"	f
mosquitto_message	lib/mosquitto.h	/^struct mosquitto_message{$/;"	s
mosquitto_message_all	lib/mosquitto_internal.h	/^struct mosquitto_message_all{$/;"	s
mosquitto_message_callback_set	lib/mosquitto.c	/^void mosquitto_message_callback_set(struct mosquitto *mosq, void (*on_message)(struct mosquitto *, void *, const struct mosquitto_message *))$/;"	f
mosquitto_message_copy	lib/messages_mosq.c	/^int mosquitto_message_copy(struct mosquitto_message *dst, const struct mosquitto_message *src)$/;"	f
mosquitto_message_free	lib/messages_mosq.c	/^void mosquitto_message_free(struct mosquitto_message **message)$/;"	f
mosquitto_message_retry_set	lib/messages_mosq.c	/^void mosquitto_message_retry_set(struct mosquitto *mosq, unsigned int message_retry)$/;"	f
mosquitto_msg_direction	lib/mosquitto_internal.h	/^enum mosquitto_msg_direction {$/;"	g
mosquitto_msg_state	lib/mosquitto_internal.h	/^enum mosquitto_msg_state {$/;"	g
mosquitto_new	lib/mosquitto.c	/^struct mosquitto *mosquitto_new(const char *id, bool clean_session, void *userdata)$/;"	f
mosquitto_opts_set	lib/mosquitto.c	/^int mosquitto_opts_set(struct mosquitto *mosq, enum mosq_opt_t option, void *value)$/;"	f
mosquitto_pub_topic_check	lib/util_mosq.c	/^int mosquitto_pub_topic_check(const char *str)$/;"	f
mosquitto_publish	lib/mosquitto.c	/^int mosquitto_publish(struct mosquitto *mosq, int *mid, const char *topic, int payloadlen, const void *payload, int qos, bool retain)$/;"	f
mosquitto_publish_callback_set	lib/mosquitto.c	/^void mosquitto_publish_callback_set(struct mosquitto *mosq, void (*on_publish)(struct mosquitto *, void *, int))$/;"	f
mosquitto_reconnect	lib/mosquitto.c	/^int mosquitto_reconnect(struct mosquitto *mosq)$/;"	f
mosquitto_reconnect_async	lib/mosquitto.c	/^int mosquitto_reconnect_async(struct mosquitto *mosq)$/;"	f
mosquitto_reconnect_delay_set	lib/mosquitto.c	/^int mosquitto_reconnect_delay_set(struct mosquitto *mosq, unsigned int reconnect_delay, unsigned int reconnect_delay_max, bool reconnect_exponential_backoff)$/;"	f
mosquitto_reinitialise	lib/mosquitto.c	/^int mosquitto_reinitialise(struct mosquitto *mosq, const char *id, bool clean_session, void *userdata)$/;"	f
mosquitto_socket	lib/mosquitto.c	/^int mosquitto_socket(struct mosquitto *mosq)$/;"	f
mosquitto_socks5_set	lib/socks_mosq.c	/^int mosquitto_socks5_set(struct mosquitto *mosq, const char *host, int port, const char *username, const char *password)$/;"	f
mosquitto_strerror	lib/mosquitto.c	/^const char *mosquitto_strerror(int mosq_errno)$/;"	f
mosquitto_sub_topic_check	lib/util_mosq.c	/^int mosquitto_sub_topic_check(const char *str)$/;"	f
mosquitto_sub_topic_tokenise	lib/mosquitto.c	/^int mosquitto_sub_topic_tokenise(const char *subtopic, char ***topics, int *count)$/;"	f
mosquitto_sub_topic_tokens_free	lib/mosquitto.c	/^int mosquitto_sub_topic_tokens_free(char ***topics, int count)$/;"	f
mosquitto_subscribe	lib/mosquitto.c	/^int mosquitto_subscribe(struct mosquitto *mosq, int *mid, const char *sub, int qos)$/;"	f
mosquitto_subscribe_callback_set	lib/mosquitto.c	/^void mosquitto_subscribe_callback_set(struct mosquitto *mosq, void (*on_subscribe)(struct mosquitto *, void *, int, int, const int *))$/;"	f
mosquitto_threaded_set	lib/thread_mosq.c	/^int mosquitto_threaded_set(struct mosquitto *mosq, bool threaded)$/;"	f
mosquitto_time	lib/time_mosq.c	/^time_t mosquitto_time(void)$/;"	f
mosquitto_tls_insecure_set	lib/mosquitto.c	/^int mosquitto_tls_insecure_set(struct mosquitto *mosq, bool value)$/;"	f
mosquitto_tls_opts_set	lib/mosquitto.c	/^int mosquitto_tls_opts_set(struct mosquitto *mosq, int cert_reqs, const char *tls_version, const char *ciphers)$/;"	f
mosquitto_tls_psk_set	lib/mosquitto.c	/^int mosquitto_tls_psk_set(struct mosquitto *mosq, const char *psk, const char *identity, const char *ciphers)$/;"	f
mosquitto_tls_set	lib/mosquitto.c	/^int mosquitto_tls_set(struct mosquitto *mosq, const char *cafile, const char *capath, const char *certfile, const char *keyfile, int (*pw_callback)(char *buf, int size, int rwflag, void *userdata))$/;"	f
mosquitto_topic_matches_sub	lib/util_mosq.c	/^int mosquitto_topic_matches_sub(const char *sub, const char *topic, bool *result)$/;"	f
mosquitto_unsubscribe	lib/mosquitto.c	/^int mosquitto_unsubscribe(struct mosquitto *mosq, int *mid, const char *sub)$/;"	f
mosquitto_unsubscribe_callback_set	lib/mosquitto.c	/^void mosquitto_unsubscribe_callback_set(struct mosquitto *mosq, void (*on_unsubscribe)(struct mosquitto *, void *, int))$/;"	f
mosquitto_user_data_set	lib/mosquitto.c	/^void mosquitto_user_data_set(struct mosquitto *mosq, void *userdata)$/;"	f
mosquitto_username_pw_set	lib/mosquitto.c	/^int mosquitto_username_pw_set(struct mosquitto *mosq, const char *username, const char *password)$/;"	f
mosquitto_want_write	lib/mosquitto.c	/^bool mosquitto_want_write(struct mosquitto *mosq)$/;"	f
mosquitto_will_clear	lib/mosquitto.c	/^int mosquitto_will_clear(struct mosquitto *mosq)$/;"	f
mosquitto_will_set	lib/mosquitto.c	/^int mosquitto_will_set(struct mosquitto *mosq, const char *topic, int payloadlen, const void *payload, int qos, bool retain)$/;"	f
msg	lib/mosquitto_internal.h	/^	struct mosquitto_message msg;$/;"	m	struct:mosquitto_message_all	typeref:struct:mosquitto_message_all::mosquitto_message
msg_count	client/client_shared.h	/^	int msg_count; \/* sub *\/$/;"	m	struct:mosq_config
msg_count	client/sub_client.c	/^int msg_count = 0;$/;"	v
msg_count	lib/mosquitto_internal.h	/^	int msg_count;$/;"	m	struct:mosquitto
msg_count12	lib/mosquitto_internal.h	/^	int msg_count12;$/;"	m	struct:mosquitto
msglen	client/client_shared.h	/^	long msglen; \/* pub *\/$/;"	m	struct:mosq_config
msglen	client/pub_client.c	/^static long msglen = 0;$/;"	v	file:
msgs	lib/mosquitto_internal.h	/^	struct mosquitto_client_msg *msgs;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_client_msg
msgtime_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t msgtime_mutex;$/;"	m	struct:mosquitto
my_connect_callback	client/pub_client.c	/^void my_connect_callback(struct mosquitto *mosq, void *obj, int result)$/;"	f
my_connect_callback	client/sub_client.c	/^void my_connect_callback(struct mosquitto *mosq, void *obj, int result)$/;"	f
my_disconnect_callback	client/pub_client.c	/^void my_disconnect_callback(struct mosquitto *mosq, void *obj, int rc)$/;"	f
my_log_callback	client/pub_client.c	/^void my_log_callback(struct mosquitto *mosq, void *obj, int level, const char *str)$/;"	f
my_log_callback	client/sub_client.c	/^void my_log_callback(struct mosquitto *mosq, void *obj, int level, const char *str)$/;"	f
my_message_callback	client/sub_client.c	/^void my_message_callback(struct mosquitto *mosq, void *obj, const struct mosquitto_message *message)$/;"	f
my_publish_callback	client/pub_client.c	/^void my_publish_callback(struct mosquitto *mosq, void *obj, int mid)$/;"	f
my_subscribe_callback	client/sub_client.c	/^void my_subscribe_callback(struct mosquitto *mosq, void *obj, int mid, int qos_count, const int *granted_qos)$/;"	f
next	lib/mosquitto_internal.h	/^	struct _mosquitto_packet *next;$/;"	m	struct:_mosquitto_packet	typeref:struct:_mosquitto_packet::_mosquitto_packet
next	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *next;$/;"	m	struct:mosquitto_message_all	typeref:struct:mosquitto_message_all::mosquitto_message_all
next_msg_out	lib/mosquitto_internal.h	/^	time_t next_msg_out;$/;"	m	struct:mosquitto
no_retain	client/client_shared.h	/^	bool no_retain; \/* sub *\/$/;"	m	struct:mosq_config
on_connect	lib/mosquitto_internal.h	/^	void (*on_connect)(struct mosquitto *, void *userdata, int rc);$/;"	m	struct:mosquitto
on_disconnect	lib/mosquitto_internal.h	/^	void (*on_disconnect)(struct mosquitto *, void *userdata, int rc);$/;"	m	struct:mosquitto
on_log	lib/mosquitto_internal.h	/^	void (*on_log)(struct mosquitto *, void *userdata, int level, const char *str);$/;"	m	struct:mosquitto
on_message	lib/mosquitto_internal.h	/^	void (*on_message)(struct mosquitto *, void *userdata, const struct mosquitto_message *message);$/;"	m	struct:mosquitto
on_publish	lib/mosquitto_internal.h	/^	void (*on_publish)(struct mosquitto *, void *userdata, int mid);$/;"	m	struct:mosquitto
on_subscribe	lib/mosquitto_internal.h	/^	void (*on_subscribe)(struct mosquitto *, void *userdata, int mid, int qos_count, const int *granted_qos);$/;"	m	struct:mosquitto
on_unsubscribe	lib/mosquitto_internal.h	/^	void (*on_unsubscribe)(struct mosquitto *, void *userdata, int mid);$/;"	m	struct:mosquitto
out_message_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t out_message_mutex;$/;"	m	struct:mosquitto
out_messages	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *out_messages;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message_all
out_messages_last	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *out_messages_last;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message_all
out_packet	lib/mosquitto_internal.h	/^	struct _mosquitto_packet *out_packet;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::_mosquitto_packet
out_packet_last	lib/mosquitto_internal.h	/^	struct _mosquitto_packet *out_packet_last;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::_mosquitto_packet
out_packet_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t out_packet_mutex;$/;"	m	struct:mosquitto
out_queue_len	lib/mosquitto_internal.h	/^	int out_queue_len;$/;"	m	struct:mosquitto
packet_length	lib/mosquitto_internal.h	/^	uint32_t packet_length;$/;"	m	struct:_mosquitto_packet
password	client/client_shared.h	/^	char *password;$/;"	m	struct:mosq_config
password	client/pub_client.c	/^static char *password = NULL;$/;"	v	file:
password	lib/mosquitto_internal.h	/^	char *password;$/;"	m	struct:mosquitto
payload	lib/mosquitto.h	/^	void *payload;$/;"	m	struct:mosquitto_message
payload	lib/mosquitto_internal.h	/^	uint8_t *payload;$/;"	m	struct:_mosquitto_packet
payloadlen	lib/mosquitto.h	/^	int payloadlen;$/;"	m	struct:mosquitto_message
ping_t	lib/mosquitto_internal.h	/^	time_t ping_t;$/;"	m	struct:mosquitto
pollfd_index	lib/mosquitto_internal.h	/^	int pollfd_index;$/;"	m	struct:mosquitto
port	client/client_shared.h	/^	int port;$/;"	m	struct:mosq_config
port	lib/mosquitto_internal.h	/^	int port;$/;"	m	struct:mosquitto
pos	lib/mosquitto_internal.h	/^	uint32_t pos;$/;"	m	struct:_mosquitto_packet
print_usage	client/pub_client.c	/^void print_usage(void)$/;"	f
print_usage	client/sub_client.c	/^void print_usage(void)$/;"	f
process_messages	client/sub_client.c	/^bool process_messages = true;$/;"	v
protocol	lib/mosquitto_internal.h	/^	enum _mosquitto_protocol protocol;$/;"	m	struct:mosquitto	typeref:enum:mosquitto::_mosquitto_protocol
protocol_version	client/client_shared.h	/^	int protocol_version;$/;"	m	struct:mosq_config
psk	client/client_shared.h	/^	char *psk;$/;"	m	struct:mosq_config
psk_client_callback	lib/net_mosq.c	/^static unsigned int psk_client_callback(SSL *ssl, const char *hint,$/;"	f	file:
psk_identity	client/client_shared.h	/^	char *psk_identity;$/;"	m	struct:mosq_config
pthread_cancel	lib/dummypthread.h	6;"	d
pthread_create	lib/dummypthread.h	4;"	d
pthread_join	lib/dummypthread.h	5;"	d
pthread_mutex_destroy	lib/dummypthread.h	9;"	d
pthread_mutex_init	lib/dummypthread.h	8;"	d
pthread_mutex_lock	lib/dummypthread.h	10;"	d
pthread_mutex_unlock	lib/dummypthread.h	11;"	d
pub	client/pub_client.c	/^int pub(int argc, char *argv[])$/;"	f
pub_loop	client/pub_client.c	/^void* pub_loop(void *arg)$/;"	f
pub_mode	client/client_shared.h	/^	int pub_mode; \/* pub *\/$/;"	m	struct:mosq_config
qos	client/client_shared.h	/^	int qos;$/;"	m	struct:mosq_config
qos	client/pub_client.c	/^static int qos = 0;$/;"	v	file:
qos	lib/mosquitto.h	/^	int qos;$/;"	m	struct:mosquitto_message
quiet	client/client_shared.h	/^	bool quiet;$/;"	m	struct:mosq_config
quiet	client/pub_client.c	/^static bool quiet = false;$/;"	v	file:
reconnect_delay	lib/mosquitto_internal.h	/^	unsigned int reconnect_delay;$/;"	m	struct:mosquitto
reconnect_delay_max	lib/mosquitto_internal.h	/^	unsigned int reconnect_delay_max;$/;"	m	struct:mosquitto
reconnect_exponential_backoff	lib/mosquitto_internal.h	/^	bool reconnect_exponential_backoff;$/;"	m	struct:mosquitto
remaining_count	lib/mosquitto_internal.h	/^	int8_t remaining_count;$/;"	m	struct:_mosquitto_packet
remaining_length	lib/mosquitto_internal.h	/^	uint32_t remaining_length;$/;"	m	struct:_mosquitto_packet
remaining_mult	lib/mosquitto_internal.h	/^	uint32_t remaining_mult;$/;"	m	struct:_mosquitto_packet
retain	client/client_shared.h	/^	bool retain;$/;"	m	struct:mosq_config
retain	client/pub_client.c	/^static int retain = 0;$/;"	v	file:
retain	lib/mosquitto.h	/^	bool retain;$/;"	m	struct:mosquitto_message
snprintf	client/client_shared.c	28;"	d	file:
snprintf	client/pub_client.c	27;"	d	file:
snprintf	lib/config.h	15;"	d
sock	lib/mosquitto_internal.h	/^	mosq_sock_t sock;$/;"	m	struct:mosquitto
sockpairR	lib/mosquitto_internal.h	/^	mosq_sock_t sockpairR, sockpairW;$/;"	m	struct:mosquitto
sockpairW	lib/mosquitto_internal.h	/^	mosq_sock_t sockpairR, sockpairW;$/;"	m	struct:mosquitto
socks5_host	client/client_shared.h	/^	char *socks5_host;$/;"	m	struct:mosq_config
socks5_host	lib/mosquitto_internal.h	/^	char *socks5_host;$/;"	m	struct:mosquitto
socks5_password	client/client_shared.h	/^	char *socks5_password;$/;"	m	struct:mosq_config
socks5_password	lib/mosquitto_internal.h	/^	char *socks5_password;$/;"	m	struct:mosquitto
socks5_port	client/client_shared.h	/^	int socks5_port;$/;"	m	struct:mosq_config
socks5_port	lib/mosquitto_internal.h	/^	int socks5_port;$/;"	m	struct:mosquitto
socks5_username	client/client_shared.h	/^	char *socks5_username;$/;"	m	struct:mosq_config
socks5_username	lib/mosquitto_internal.h	/^	char *socks5_username;$/;"	m	struct:mosquitto
srv_callback	lib/srv_mosq.c	/^static void srv_callback(void *arg, int status, int timeouts, unsigned char *abuf, int alen)$/;"	f	file:
ssize_t	lib/mosquitto.c	/^typedef int ssize_t;$/;"	t	file:
ssize_t	lib/net_mosq.h	/^typedef int ssize_t;$/;"	t
ssl	lib/mosquitto_internal.h	/^	SSL *ssl;$/;"	m	struct:mosquitto
ssl_ctx	lib/mosquitto_internal.h	/^	SSL_CTX *ssl_ctx;$/;"	m	struct:mosquitto
state	lib/mosquitto_internal.h	/^	enum mosquitto_client_state state;$/;"	m	struct:mosquitto	typeref:enum:mosquitto::mosquitto_client_state
state	lib/mosquitto_internal.h	/^	enum mosquitto_msg_state state;$/;"	m	struct:mosquitto_message_all	typeref:enum:mosquitto_message_all::mosquitto_msg_state
state_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t state_mutex;$/;"	m	struct:mosquitto
status	client/pub_client.c	/^static int status = STATUS_CONNECTING;$/;"	v	file:
strcasecmp	lib/config.h	20;"	d
strerror_r	lib/config.h	23;"	d
strtok_r	lib/config.h	22;"	d
sub_count	lib/mosquitto_internal.h	/^	int sub_count;$/;"	m	struct:mosquitto
subs	lib/mosquitto_internal.h	/^	struct _mosquitto_subhier **subs;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::_mosquitto_subhier
thread_id	lib/mosquitto_internal.h	/^	pthread_t thread_id;$/;"	m	struct:mosquitto
threaded	lib/mosquitto_internal.h	/^	char threaded;$/;"	m	struct:mosquitto
tick64	lib/time_mosq.c	/^static bool tick64 = false;$/;"	v	file:
timestamp	lib/mosquitto_internal.h	/^	time_t timestamp;$/;"	m	struct:mosquitto_message_all
tls_cafile	lib/mosquitto_internal.h	/^	char *tls_cafile;$/;"	m	struct:mosquitto
tls_capath	lib/mosquitto_internal.h	/^	char *tls_capath;$/;"	m	struct:mosquitto
tls_cert_reqs	lib/mosquitto_internal.h	/^	int tls_cert_reqs;$/;"	m	struct:mosquitto
tls_certfile	lib/mosquitto_internal.h	/^	char *tls_certfile;$/;"	m	struct:mosquitto
tls_ciphers	lib/mosquitto_internal.h	/^	char *tls_ciphers;$/;"	m	struct:mosquitto
tls_ex_index_mosq	lib/net_mosq.c	/^int tls_ex_index_mosq = -1;$/;"	v
tls_insecure	lib/mosquitto_internal.h	/^	bool tls_insecure;$/;"	m	struct:mosquitto
tls_keyfile	lib/mosquitto_internal.h	/^	char *tls_keyfile;$/;"	m	struct:mosquitto
tls_psk	lib/mosquitto_internal.h	/^	char *tls_psk;$/;"	m	struct:mosquitto
tls_psk_identity	lib/mosquitto_internal.h	/^	char *tls_psk_identity;$/;"	m	struct:mosquitto
tls_pw_callback	lib/mosquitto_internal.h	/^	int (*tls_pw_callback)(char *buf, int size, int rwflag, void *userdata);$/;"	m	struct:mosquitto
tls_version	client/client_shared.h	/^	char *tls_version;$/;"	m	struct:mosq_config
tls_version	lib/mosquitto_internal.h	/^	char *tls_version;$/;"	m	struct:mosquitto
to_process	lib/mosquitto_internal.h	/^	uint32_t to_process;$/;"	m	struct:_mosquitto_packet
topic	client/client_shared.h	/^	char *topic; \/* pub *\/$/;"	m	struct:mosq_config
topic	client/pub_client.c	/^static char *topic = NULL;$/;"	v	file:
topic	lib/mosquitto.h	/^	char *topic;$/;"	m	struct:mosquitto_message
topic_count	client/client_shared.h	/^	int topic_count; \/* sub *\/$/;"	m	struct:mosq_config
topics	client/client_shared.h	/^	char **topics; \/* sub *\/$/;"	m	struct:mosq_config
true	lib/mosquitto.h	37;"	d
uint16_t	lib/mosquitto_internal.h	/^		typedef unsigned short uint16_t;$/;"	t
uint32_t	lib/mosquitto_internal.h	/^		typedef unsigned int uint32_t;$/;"	t
uint64_t	lib/mosquitto_internal.h	/^		typedef unsigned long long uint64_t;$/;"	t
uint8_t	lib/mosquitto_internal.h	/^		typedef unsigned char uint8_t;$/;"	t
use_srv	client/client_shared.h	/^	bool use_srv;$/;"	m	struct:mosq_config
userdata	lib/mosquitto_internal.h	/^	void *userdata;$/;"	m	struct:mosquitto
username	client/client_shared.h	/^	char *username;$/;"	m	struct:mosq_config
username	client/pub_client.c	/^static char *username = NULL;$/;"	v	file:
username	lib/mosquitto_internal.h	/^	char *username;$/;"	m	struct:mosquitto
uthash_free	lib/config.h	28;"	d
uthash_malloc	lib/config.h	27;"	d
verbose	client/client_shared.h	/^	bool verbose; \/* sub *\/$/;"	m	struct:mosq_config
want_connect	lib/mosquitto_internal.h	/^	bool want_connect;$/;"	m	struct:mosquitto
want_write	lib/mosquitto_internal.h	/^	bool want_write;$/;"	m	struct:mosquitto
will	lib/mosquitto_internal.h	/^	struct mosquitto_message *will;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message
will_payload	client/client_shared.h	/^	char *will_payload;$/;"	m	struct:mosq_config
will_payloadlen	client/client_shared.h	/^	long will_payloadlen;$/;"	m	struct:mosq_config
will_qos	client/client_shared.h	/^	int will_qos;$/;"	m	struct:mosq_config
will_retain	client/client_shared.h	/^	bool will_retain;$/;"	m	struct:mosq_config
will_topic	client/client_shared.h	/^	char *will_topic;$/;"	m	struct:mosq_config
ws_context	lib/mosquitto_internal.h	/^	struct libwebsocket_context *ws_context;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::libwebsocket_context
wsi	lib/mosquitto_internal.h	/^	struct libwebsocket *wsi;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::libwebsocket
wsi	lib/mosquitto_internal.h	/^	struct lws *wsi;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::lws
